{"version":3,"sources":["exercise/03.html"],"names":[],"mappings":"yJAAA,OAAe","file":"static/js/26.18304ef1.chunk.js","sourcesContent":["export default \"<!-- Using JSX -->\\n<!-- http://localhost:3000/isolated/exercise/03.html -->\\n\\n<body>\\n  <div id=\\\"root\\\"></div>\\n  <script src=\\\"https://unpkg.com/react@17.0.0/umd/react.development.js\\\"></script>\\n  <script src=\\\"https://unpkg.com/react-dom@17.0.0/umd/react-dom.development.js\\\"></script>\\n\\n  <!-- 🐨 add Babel to the page.\\n       💰 Here is the script tag that'll do the job:\\n  <script src=\\\"https://unpkg.com/@babel/standalone@7.12.4/babel.js\\\"></script>\\n  -->\\n\\n  <script type=\\\"module\\\">\\n    // 🐨 on the script tag above, change `type=\\\"module\\\"`\\n    // to `type=\\\"text/babel\\\"` so babel will compile this code for the browser to run.\\n\\n    // 🐨 re-implement this using JSX!\\n    const element = React.createElement('div', {\\n      className: 'container',\\n      children: 'Hello World',\\n    })\\n\\n    // 💰 there are a few subtle differences between JSX and HTML. One such\\n    // difference is how you apply a class to an element in JSX is by using\\n    // `className` rather than `class`!\\n    // 📜 You can learn the differences between JSX and HTML syntax from the React docs here:\\n    // https://reactjs.org/docs/dom-elements.html#differences-in-attributes\\n\\n    ReactDOM.render(element, document.getElementById('root'))\\n  </script>\\n</body>\\n\";"],"sourceRoot":""}