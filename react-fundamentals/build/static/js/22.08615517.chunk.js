(this["webpackJsonp@kentcdodds/react-fundamentals"]=this["webpackJsonp@kentcdodds/react-fundamentals"]||[]).push([[22],{184:function(n,e,a){"use strict";a.r(e),a.d(e,"readingTime",(function(){return p})),a.d(e,"default",(function(){return c})),a.d(e,"tableOfContents",(function(){return i})),a.d(e,"frontMatter",(function(){return r}));var t=a(34),s=(a(1),a(209)),o=["components"],p={text:"6 min read",minutes:5.585,time:335100,words:1117},l={};function c(n){var e=n.components,a=Object(t.a)(n,o);return Object(s.a)("wrapper",Object.assign({},l,a,{components:e,mdxType:"MDXLayout"}),Object(s.a)("h1",{id:"rendering-arrays"},"Rendering Arrays"),Object(s.a)("h2",{id:"-your-notes"},"\ud83d\udcdd Your Notes"),Object(s.a)("p",null,"Elaborate on your learnings here in ",Object(s.a)("inlineCode",{parentName:"p"},"src/exercise/07.md")),Object(s.a)("h2",{id:"background"},"Background"),Object(s.a)("p",null,"One of the more tricky things with React is the requirement of a ",Object(s.a)("inlineCode",{parentName:"p"},"key")," prop when\nyou attempt to render a list of elements."),Object(s.a)("p",null,"If we want to render a list like this, then there\u2019s no problem:"),Object(s.a)("pre",null,Object(s.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> ui <span class="token operator">=</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token plain-text">One</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token plain-text">Two</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token plain-text">Three</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span>\n'}})),Object(s.a)("p",null,"But rendering an array of elements is very common:"),Object(s.a)("pre",null,Object(s.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'One\'</span><span class="token punctuation">,</span> <span class="token string">\'Two\'</span><span class="token punctuation">,</span> <span class="token string">\'Three\'</span><span class="token punctuation">]</span>\n\n<span class="token keyword">const</span> ui <span class="token operator">=</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token punctuation">{</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">listItem</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>listItem<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span>\n'}})),Object(s.a)("p",null,"Those will generate the same HTML, but what it actually does is slightly\ndifferent. Let\u2019s re-write it to see that difference:"),Object(s.a)("pre",null,Object(s.a)("code",{parentName:"pre",className:"language-jsx","data-language":"jsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'One\'</span><span class="token punctuation">,</span> <span class="token string">\'Two\'</span><span class="token punctuation">,</span> <span class="token string">\'Three\'</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> listUI <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">listItem</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>listItem<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token punctuation">)</span>\n<span class="token comment">// notice that listUI is an array</span>\n<span class="token keyword">const</span> ui <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>listUI<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n'}})),Object(s.a)("p",null,"So we\u2019re interpolating an array of renderable elements. This is totally\nacceptable, but it has interesting implications for when things change over\ntime."),Object(s.a)("p",null,"If you re-render that list with an added item, React doesn\u2019t really know whether\nyou added an item in the middle, beginning, or end. And the same goes for when\nyou remove an item (it doesn\u2019t know whether that happened in the middle,\nbeginning, or end either)."),Object(s.a)("p",null,"In this example, it\u2019s not a big deal, because React\u2019s best-guess is right and it\nworks out ok. However, if any of those React elements represent a component that\nis maintaining state, that can be pretty problematic, which this exercise\ndemonstrates."),Object(s.a)("h2",{id:"exercise"},"Exercise"),Object(s.a)("p",null,"Production deploys:"),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",{parentName:"li",href:"http://react-fundamentals.netlify.app/isolated/exercise/07.js"},"Exercise")),Object(s.a)("li",{parentName:"ul"},Object(s.a)("a",{parentName:"li",href:"http://react-fundamentals.netlify.app/isolated/final/07.js"},"Final"))),Object(s.a)("p",null,"We\u2019ve got a problem. You may have already noticed the error message in the\nconsole about it. Try this:"),Object(s.a)("ol",null,Object(s.a)("li",{parentName:"ol"},"Hit the \u201cremove\u201d button on the last list item"),Object(s.a)("li",{parentName:"ol"},"Notice that list item is now gone \ud83d\udc4d"),Object(s.a)("li",{parentName:"ol"},"Hit the \u201cremove\u201d button on the first list item"),Object(s.a)("li",{parentName:"ol"},"Notice that everything\u2019s mixed up! \ud83d\ude26")),Object(s.a)("p",null,"Let me describe what\u2019s going on here."),Object(s.a)("p",null,"Here\u2019s the TL;DR: Every React element accepts a special ",Object(s.a)("inlineCode",{parentName:"p"},"key")," prop you can use\nto help React keep track of elements between updates. If you don\u2019t provide it\nwhen rendering a list, React can get things mixed up. The solution is to give\neach element a unique (to the array) ",Object(s.a)("inlineCode",{parentName:"p"},"key")," prop, and then everything will work\nfine."),Object(s.a)("p",null,"Let\u2019s dive in a little deeper:"),Object(s.a)("p",null,"If you re-render that list with an added item, React doesn\u2019t really know whether\nyou added an item in the middle, beginning, or end. And the same goes for when\nyou remove an item (it doesn\u2019t know whether that happened in the middle,\nbeginning, or end either)."),Object(s.a)("p",null,"To be clear, ",Object(s.a)("em",{parentName:"p"},"we")," know as the developer because we wrote the code, but as far as\nReact is concerned, we simply gave it some react elements before, we gave it\nsome after, and now React is trying to compare the before and after with no\nknowledge of how the elements got from one position to another."),Object(s.a)("p",null,"Sometimes it\u2019s not a big deal, because React\u2019s best-guess is right and it works\nout ok. However, if any of those React elements represent a component that is\nmaintaining state (like the value of an input or focus state), that can be\npretty problematic, which this exercise demonstrates."),Object(s.a)("p",null,"To solve this problem, we need to give React a hint so it can associate the old\nReact elements with the new ones we\u2019re giving it due to the change. We do this\nusing a special prop called the ",Object(s.a)("inlineCode",{parentName:"p"},"key")," prop."),Object(s.a)("p",null,"In this exercise, we have a list of fruit that appear and can be removed. There\nis state that exists (managed by the browser) in the ",Object(s.a)("inlineCode",{parentName:"p"},"<input />")," for each of the\nfruit: the input\u2019s ",Object(s.a)("inlineCode",{parentName:"p"},"value")," (initialized via the ",Object(s.a)("inlineCode",{parentName:"p"},"defaultValue")," prop)."),Object(s.a)("p",null,"Without a ",Object(s.a)("inlineCode",{parentName:"p"},"key")," prop, for all React knows, you removed an input and gave another\nlabel different text content, which leads to the bug we\u2019ll see in the exercise."),Object(s.a)("p",null,"So here\u2019s the rule:"),Object(s.a)("p",null,Object(s.a)("strong",{parentName:"p"},"Whenever you\u2019re rendering an array of React elements, each one must have a\nunique ",Object(s.a)("inlineCode",{parentName:"strong"},"key")," prop.")),Object(s.a)("p",null,"\ud83d\udcdc You can learn more about what can go wrong when you don\u2019t specify the ",Object(s.a)("inlineCode",{parentName:"p"},"key"),"\nprop in my blog post\n",Object(s.a)("a",{parentName:"p",href:"https://kentcdodds.com/blog/understanding-reacts-key-prop"},"Understanding React\u2019s key prop"),"."),Object(s.a)("p",null,"\ud83d\udcdc Also, you can get a deeper understanding in this blog post:\n",Object(s.a)("a",{parentName:"p",href:"https://epicreact.dev/why-react-needs-a-key-prop"},"Why React needs a key prop"),".\nThat\u2019ll give you a bit of what\u2019s going on under the hood, so I recommend reading\nthis!"),Object(s.a)("p",null,"\ud83d\udc28 The React elements we\u2019re rendering are the ",Object(s.a)("inlineCode",{parentName:"p"},"li")," elements, so for this\nexercise, add a ",Object(s.a)("inlineCode",{parentName:"p"},"key")," prop there. You can use the ",Object(s.a)("inlineCode",{parentName:"p"},"item.id")," for the value to\nensure that the key value is unique for each element."),Object(s.a)("p",null,"\ud83e\udd89 Note, the key only needs to be unique within a given array. So this works\nfine:"),Object(s.a)("pre",null,Object(s.a)("code",{parentName:"pre",className:"language-tsx","data-language":"tsx","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token punctuation">{</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">listItem</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>listItem<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>listItem<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n    </span><span class="token punctuation">{</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">listItem</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>listItem<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>listItem<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span>\n'}})),Object(s.a)("p",null,"\ud83e\udd89 In our example, the ",Object(s.a)("inlineCode",{parentName:"p"},"value")," of the input is managed by the browser, but this\nhas even bigger implications when we start working with our own state and\nside-effects. It\u2019s a little too early to demonstrate this for you, but you\nshould know that when React removes a component from the DOM, it gets\n\u201cunmounted\u201d which will trigger side-effect cleanups, and if new elements are\nadded then those will be \u201cmounted\u201d and will trigger your side-effects. This can\ncause some surprising and problematic issues for your users. So just remember\nthe rule and always provide a ",Object(s.a)("inlineCode",{parentName:"p"},"key")," when rendering an array. Later when you have\nmore React experience, you can come back to this exercise and expand it a bit\nwith custom components that manage state and side-effects to observe the\nproblems caused when you ignore the ",Object(s.a)("inlineCode",{parentName:"p"},"key"),"."),Object(s.a)("h2",{id:"extra-credit"},"Extra Credit"),Object(s.a)("h3",{id:"1--focus-demo"},"1. \ud83d\udcaf Focus Demo"),Object(s.a)("p",null,Object(s.a)("a",{parentName:"p",href:"http://react-fundamentals.netlify.app/isolated/final/07.extra-1.js"},"Production deploy")),Object(s.a)("p",null,"\ud83d\udc28 For this extra credit, open the production deploy above."),Object(s.a)("p",null,"You can observe that when we\u2019re talking about \u201cstate\u201d we\u2019re also talking about\nkeyboard focus as well as what text is selected! As you play around with this,\ntry selecting text in the inputs and observe how the first two examples differ\nfrom the last one. You\u2019ll notice that using the array ",Object(s.a)("inlineCode",{parentName:"p"},"index")," as a key is no\ndifferent from React\u2019s default behavior, so it\u2019s unlikely to fix issues if\nyou\u2019re having them. Best to use a unique ID. Play around with it! (Remember,\nyou\u2019ll find the source for this demo in the ",Object(s.a)("inlineCode",{parentName:"p"},"final")," directory)."),Object(s.a)("p",null,"There are some other interesting things you can do with ",Object(s.a)("inlineCode",{parentName:"p"},"key"),"s as well (like\nchanging them on an element to intentionally reset the state of a component).\nFeel free to play around with that if you like, but we\u2019ll be using that in a\nfuture workshop so look forward to it!"),Object(s.a)("h2",{id:"-feedback"},"\ud83e\udd89 Feedback"),Object(s.a)("p",null,"Fill out\n",Object(s.a)("a",{parentName:"p",href:"https://ws.kcd.im/?ws=React%20Fundamentals%20%E2%9A%9B&e=07%3A%20Rendering%20Arrays&em="},"the feedback form"),"."))}c.isMDXComponent=!0;var i=function(){return[{id:"-your-notes",level:2,title:"\ud83d\udcdd Your Notes",children:[]},{id:"background",level:2,title:"Background",children:[]},{id:"exercise",level:2,title:"Exercise",children:[]},{id:"extra-credit",level:2,title:"Extra Credit",children:[{id:"1--focus-demo",level:3,title:"1. \ud83d\udcaf Focus Demo",children:[]}]},{id:"-feedback",level:2,title:"\ud83e\udd89 Feedback",children:[]}]},r={}},209:function(n,e,a){"use strict";a.d(e,"a",(function(){return k}));var t=a(1),s=a.n(t);function o(n,e,a){return e in n?Object.defineProperty(n,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[e]=a,n}function p(n,e){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),a.push.apply(a,t)}return a}function l(n){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?p(Object(a),!0).forEach((function(e){o(n,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(a,e))}))}return n}function c(n,e){if(null==n)return{};var a,t,s=function(n,e){if(null==n)return{};var a,t,s={},o=Object.keys(n);for(t=0;t<o.length;t++)a=o[t],e.indexOf(a)>=0||(s[a]=n[a]);return s}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)a=o[t],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(s[a]=n[a])}return s}var i=s.a.createContext({}),r=function(n){var e=s.a.useContext(i),a=e;return n&&(a="function"===typeof n?n(e):l(l({},e),n)),a},u={inlineCode:"code",wrapper:function(n){var e=n.children;return s.a.createElement(s.a.Fragment,{},e)}},d=s.a.forwardRef((function(n,e){var a=n.components,t=n.mdxType,o=n.originalType,p=n.parentName,i=c(n,["components","mdxType","originalType","parentName"]),d=r(a),k=t,h=d["".concat(p,".").concat(k)]||d[k]||u[k]||o;return a?s.a.createElement(h,l(l({ref:e},i),{},{components:a})):s.a.createElement(h,l({ref:e},i))}));function k(n,e){var a=arguments,t=e&&e.mdxType;if("string"===typeof n||t){var o=a.length,p=new Array(o);p[0]=d;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=n,l.mdxType="string"===typeof n?n:t,p[1]=l;for(var i=2;i<o;i++)p[i]=a[i];return s.a.createElement.apply(null,p)}return s.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);
//# sourceMappingURL=22.08615517.chunk.js.map