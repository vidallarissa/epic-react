(this["webpackJsonp@kentcdodds/react-fundamentals"]=this["webpackJsonp@kentcdodds/react-fundamentals"]||[]).push([[25],{173:function(e,t,n){"use strict";n.r(t),t.default='\x3c!-- Intro to raw React APIs --\x3e\n\x3c!-- http://localhost:3000/isolated/exercise/02.html --\x3e\n\n<body>\n  <div id="root"></div>\n\n  \x3c!-- \ud83d\udc28 add React and ReactDOM on the page.\n       \ud83d\udcb0 Here are script tags that\'ll do the job:\n  <script src="https://unpkg.com/react@17.0.0/umd/react.development.js"><\/script>\n  <script src="https://unpkg.com/react-dom@17.0.0/umd/react-dom.development.js"><\/script>\n  --\x3e\n\n  <script type="module">\n    const rootElement = document.getElementById(\'root\')\n\n    // You\'re going to re-implement this code using React!\n    // \ud83d\udca3 So go ahead and delete this implementation (or comment it out for now)\n    // These three lines are similar to React.createElement\n    const element = document.createElement(\'div\')\n    element.textContent = \'Hello World\' // \ud83d\udcb0 in React, you set this with the "children" prop\n    element.className = \'container\' // \ud83d\udcb0 in React, this is also called the "className" prop\n    // This is similar to ReactDOM.render\n    rootElement.append(element)\n\n    // \ud83d\udc28 Please re-implement the regular document.createElement code above\n    // with these React API calls\n    // \ud83d\udcb0 The example in the markdown file should be a good hint for you.\n  <\/script>\n</body>\n'}}]);
//# sourceMappingURL=25.924cdb00.chunk.js.map