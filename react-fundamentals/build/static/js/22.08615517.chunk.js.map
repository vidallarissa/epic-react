{"version":3,"sources":["exercise/07.md","../node_modules/@mdx-js/react/dist/esm.js"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","tableOfContents","id","level","title","children","frontMatter","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","React","createContext","useMDXComponents","contextComponents","useContext","allComponents","DEFAULTS","inlineCode","wrapper","_ref","createElement","Fragment","MDXCreateElement","forwardRef","ref","propComponents","originalType","etc","type","Component","concat","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName"],"mappings":"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","file":"static/js/22.08615517.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"6 min read\",\"minutes\":5.585,\"time\":335100,\"words\":1117}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"rendering-arrays\"\n    }}>{`Rendering Arrays`}</h1>\n    <h2 {...{\n      \"id\": \"-your-notes\"\n    }}>{`üìù Your Notes`}</h2>\n    <p>{`Elaborate on your learnings here in `}<inlineCode parentName=\"p\">{`src/exercise/07.md`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"background\"\n    }}>{`Background`}</h2>\n    <p>{`One of the more tricky things with React is the requirement of a `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` prop when\nyou attempt to render a list of elements.`}</p>\n    <p>{`If we want to render a list like this, then there‚Äôs no problem:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> ui <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">One</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">Two</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">Three</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`But rendering an array of elements is very common:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> list <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'One'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Two'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Three'</span><span class=\\\"token punctuation\\\">]</span>\\n\\n<span class=\\\"token keyword\\\">const</span> ui <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token punctuation\\\">{</span>list<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">listItem</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>listItem<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`Those will generate the same HTML, but what it actually does is slightly\ndifferent. Let‚Äôs re-write it to see that difference:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> list <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'One'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Two'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Three'</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">const</span> listUI <span class=\\\"token operator\\\">=</span> list<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">listItem</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>listItem<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">// notice that listUI is an array</span>\\n<span class=\\\"token keyword\\\">const</span> ui <span class=\\\"token operator\\\">=</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>listUI<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">></span></span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`So we‚Äôre interpolating an array of renderable elements. This is totally\nacceptable, but it has interesting implications for when things change over\ntime.`}</p>\n    <p>{`If you re-render that list with an added item, React doesn‚Äôt really know whether\nyou added an item in the middle, beginning, or end. And the same goes for when\nyou remove an item (it doesn‚Äôt know whether that happened in the middle,\nbeginning, or end either).`}</p>\n    <p>{`In this example, it‚Äôs not a big deal, because React‚Äôs best-guess is right and it\nworks out ok. However, if any of those React elements represent a component that\nis maintaining state, that can be pretty problematic, which this exercise\ndemonstrates.`}</p>\n    <h2 {...{\n      \"id\": \"exercise\"\n    }}>{`Exercise`}</h2>\n    <p>{`Production deploys:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://react-fundamentals.netlify.app/isolated/exercise/07.js\"\n        }}>{`Exercise`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://react-fundamentals.netlify.app/isolated/final/07.js\"\n        }}>{`Final`}</a></li>\n    </ul>\n    <p>{`We‚Äôve got a problem. You may have already noticed the error message in the\nconsole about it. Try this:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Hit the ‚Äúremove‚Äù button on the last list item`}</li>\n      <li parentName=\"ol\">{`Notice that list item is now gone üëç`}</li>\n      <li parentName=\"ol\">{`Hit the ‚Äúremove‚Äù button on the first list item`}</li>\n      <li parentName=\"ol\">{`Notice that everything‚Äôs mixed up! üò¶`}</li>\n    </ol>\n    <p>{`Let me describe what‚Äôs going on here.`}</p>\n    <p>{`Here‚Äôs the TL;DR: Every React element accepts a special `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` prop you can use\nto help React keep track of elements between updates. If you don‚Äôt provide it\nwhen rendering a list, React can get things mixed up. The solution is to give\neach element a unique (to the array) `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` prop, and then everything will work\nfine.`}</p>\n    <p>{`Let‚Äôs dive in a little deeper:`}</p>\n    <p>{`If you re-render that list with an added item, React doesn‚Äôt really know whether\nyou added an item in the middle, beginning, or end. And the same goes for when\nyou remove an item (it doesn‚Äôt know whether that happened in the middle,\nbeginning, or end either).`}</p>\n    <p>{`To be clear, `}<em parentName=\"p\">{`we`}</em>{` know as the developer because we wrote the code, but as far as\nReact is concerned, we simply gave it some react elements before, we gave it\nsome after, and now React is trying to compare the before and after with no\nknowledge of how the elements got from one position to another.`}</p>\n    <p>{`Sometimes it‚Äôs not a big deal, because React‚Äôs best-guess is right and it works\nout ok. However, if any of those React elements represent a component that is\nmaintaining state (like the value of an input or focus state), that can be\npretty problematic, which this exercise demonstrates.`}</p>\n    <p>{`To solve this problem, we need to give React a hint so it can associate the old\nReact elements with the new ones we‚Äôre giving it due to the change. We do this\nusing a special prop called the `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` prop.`}</p>\n    <p>{`In this exercise, we have a list of fruit that appear and can be removed. There\nis state that exists (managed by the browser) in the `}<inlineCode parentName=\"p\">{`<input />`}</inlineCode>{` for each of the\nfruit: the input‚Äôs `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` (initialized via the `}<inlineCode parentName=\"p\">{`defaultValue`}</inlineCode>{` prop).`}</p>\n    <p>{`Without a `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` prop, for all React knows, you removed an input and gave another\nlabel different text content, which leads to the bug we‚Äôll see in the exercise.`}</p>\n    <p>{`So here‚Äôs the rule:`}</p>\n    <p><strong parentName=\"p\">{`Whenever you‚Äôre rendering an array of React elements, each one must have a\nunique `}<inlineCode parentName=\"strong\">{`key`}</inlineCode>{` prop.`}</strong></p>\n    <p>{`üìú You can learn more about what can go wrong when you don‚Äôt specify the `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{`\nprop in my blog post\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://kentcdodds.com/blog/understanding-reacts-key-prop\"\n      }}>{`Understanding React‚Äôs key prop`}</a>{`.`}</p>\n    <p>{`üìú Also, you can get a deeper understanding in this blog post:\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://epicreact.dev/why-react-needs-a-key-prop\"\n      }}>{`Why React needs a key prop`}</a>{`.\nThat‚Äôll give you a bit of what‚Äôs going on under the hood, so I recommend reading\nthis!`}</p>\n    <p>{`üê® The React elements we‚Äôre rendering are the `}<inlineCode parentName=\"p\">{`li`}</inlineCode>{` elements, so for this\nexercise, add a `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` prop there. You can use the `}<inlineCode parentName=\"p\">{`item.id`}</inlineCode>{` for the value to\nensure that the key value is unique for each element.`}</p>\n    <p>{`ü¶â Note, the key only needs to be unique within a given array. So this works\nfine:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\",\n        \"data-language\": \"tsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> element <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token punctuation\\\">{</span>list<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">listItem</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span> <span class=\\\"token attr-name\\\">key</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>listItem<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>listItem<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token punctuation\\\">{</span>list<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">listItem</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span> <span class=\\\"token attr-name\\\">key</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>listItem<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>listItem<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`ü¶â In our example, the `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` of the input is managed by the browser, but this\nhas even bigger implications when we start working with our own state and\nside-effects. It‚Äôs a little too early to demonstrate this for you, but you\nshould know that when React removes a component from the DOM, it gets\n‚Äúunmounted‚Äù which will trigger side-effect cleanups, and if new elements are\nadded then those will be ‚Äúmounted‚Äù and will trigger your side-effects. This can\ncause some surprising and problematic issues for your users. So just remember\nthe rule and always provide a `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` when rendering an array. Later when you have\nmore React experience, you can come back to this exercise and expand it a bit\nwith custom components that manage state and side-effects to observe the\nproblems caused when you ignore the `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"extra-credit\"\n    }}>{`Extra Credit`}</h2>\n    <h3 {...{\n      \"id\": \"1--focus-demo\"\n    }}>{`1. üíØ Focus Demo`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://react-fundamentals.netlify.app/isolated/final/07.extra-1.js\"\n      }}>{`Production deploy`}</a></p>\n    <p>{`üê® For this extra credit, open the production deploy above.`}</p>\n    <p>{`You can observe that when we‚Äôre talking about ‚Äústate‚Äù we‚Äôre also talking about\nkeyboard focus as well as what text is selected! As you play around with this,\ntry selecting text in the inputs and observe how the first two examples differ\nfrom the last one. You‚Äôll notice that using the array `}<inlineCode parentName=\"p\">{`index`}</inlineCode>{` as a key is no\ndifferent from React‚Äôs default behavior, so it‚Äôs unlikely to fix issues if\nyou‚Äôre having them. Best to use a unique ID. Play around with it! (Remember,\nyou‚Äôll find the source for this demo in the `}<inlineCode parentName=\"p\">{`final`}</inlineCode>{` directory).`}</p>\n    <p>{`There are some other interesting things you can do with `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{`s as well (like\nchanging them on an element to intentionally reset the state of a component).\nFeel free to play around with that if you like, but we‚Äôll be using that in a\nfuture workshop so look forward to it!`}</p>\n    <h2 {...{\n      \"id\": \"-feedback\"\n    }}>{`ü¶â Feedback`}</h2>\n    <p>{`Fill out\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://ws.kcd.im/?ws=React%20Fundamentals%20%E2%9A%9B&e=07%3A%20Rendering%20Arrays&em=\"\n      }}>{`the feedback form`}</a>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"-your-notes\",\n    level: 2,\n    title: \"üìù Your Notes\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"background\",\n    level: 2,\n    title: \"Background\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"exercise\",\n    level: 2,\n    title: \"Exercise\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"extra-credit\",\n    level: 2,\n    title: \"Extra Credit\",\n    children: [\n        {\n              id: \"1--focus-demo\",\n              level: 3,\n              title: \"1. üíØ Focus Demo\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"-feedback\",\n    level: 2,\n    title: \"ü¶â Feedback\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n"],"sourceRoot":""}